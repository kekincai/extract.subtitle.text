1
00:00:00,000 --> 00:00:09,718
皆さんこんにちは特化型です今回は開発実況シリーズ

2
00:00:04,440 --> 00:00:06,448
web 日報登録システムの第16回ということで前回の続きを進めていきたいと

3
00:00:09,718 --> 00:00:15,628
おもいます

4
00:00:10,888 --> 00:00:20,019
僕のチャンネルではプログラミングのスキルアップに役立つ情報や開発実況なくの動画

5
00:00:15,630 --> 00:00:22,530
を配信していますのでプログラミングを学習中の方はぜひチャンネル登録

6
00:00:20,019 --> 00:00:22,528
お願いします

7
00:00:22,890 --> 00:00:30,809
現在はこのようなアプリの仕上げ作業を行っています

8
00:00:26,879 --> 00:00:34,289
前回はマルニのセキュリティ対策を行いました

9
00:00:30,809 --> 00:00:38,009
ユーザーのパスワードと個人情報のアンコウカー

10
00:00:34,289 --> 00:00:42,058
脆弱性対策のためのクロスサイトスクリプティングや

11
00:00:38,009 --> 00:00:45,749
クロスサイトリクエストフォージェリ対策の実装を行いましたね

12
00:00:42,060 --> 00:00:49,790
今回はマールさんのリファクタリングを行っていきましょう

13
00:00:45,750 --> 00:00:51,209
これで開発フェーズは一通り完了となります

14
00:00:49,789 --> 00:00:53,208
[音楽]

15
00:00:51,210 --> 00:00:53,210
ん

16
00:00:53,369 --> 00:00:56,909
の

17
00:00:55,179 --> 00:00:59,909
ん

18
00:00:56,909 --> 00:00:59,909
ん

19
00:01:01,829 --> 00:01:08,970
リファクタリングとはアプリの動作自体は変えずに

20
00:01:05,700 --> 00:01:14,819
ソースコードを内部的に整理していく作業です

21
00:01:08,969 --> 00:01:16,618
これまでの動画でも見て来ていただいたように開発中は機能を実現することを優先して

22
00:01:14,819 --> 00:01:21,819
コーディングを行っていますので

23
00:01:16,618 --> 00:01:27,249
昨日が動きはするもののソースコード的には結構効率の悪い書き方をして

24
00:01:21,819 --> 00:01:32,168
いかに後から見たときに分かりづらい可読性の低い高度になっていたりします

25
00:01:27,250 --> 00:01:33,610
そういった部分をアプリの某鯖そのままに綺麗に書き直していく作業のことをリ

26
00:01:32,170 --> 00:01:38,740
ファクタリングと言います

27
00:01:33,609 --> 00:01:41,839
宇治実際の開発現場では当たり前に行われている作業工程ですがプログラミングの入門

28
00:01:38,739 --> 00:01:42,598
書のではあまり取り上げられることがないです

29
00:01:41,840 --> 00:01:45,659
ん

30
00:01:42,599 --> 00:01:50,007
作業としてはそれほど大変なものではないのですが

31
00:01:45,659 --> 00:01:56,100
リファクタリングをやっておくかどうかで今後のアプリのメンテナンセイヤー

32
00:01:50,009 --> 00:02:00,540
不具合が発生した場合の調査時間の短縮などにもつながるため結構重要な作業なんです

33
00:01:56,099 --> 00:02:02,618
リファクタリングにはいろいろなやり方がありますが今回のアプリはソースコードの数

34
00:02:00,540 --> 00:02:07,809
もそれほど多くなくシンプルな

35
00:02:02,620 --> 00:02:10,469
後世のためこのような基本的なアプローチを実施していきますそれでは上から順番に

36
00:02:07,810 --> 00:02:10,470
進めていきましょう

37
00:02:10,849 --> 00:02:18,139
まずは各ソースコードの掃除から始めていきましょう

38
00:02:14,330 --> 00:02:21,580
ソースコード内の不要な空白行やデバッグ分

39
00:02:18,139 --> 00:02:38,369
不要なコメントなどを削除して経営にしていきます

40
00:02:21,580 --> 00:02:38,369
[音楽]

41
00:02:52,830 --> 00:03:00,400
2

42
00:02:55,150 --> 00:03:03,560
また逆にコメントが不足していてわかりづらいなぁと思う部分にはこんな感じで

43
00:03:00,400 --> 00:03:06,919
コメントを追記していきます

44
00:03:03,560 --> 00:03:06,919
[音楽]

45
00:03:11,530 --> 00:03:23,080
[音楽]

46
00:03:24,129 --> 00:03:31,709
ここでこの作業を行う前提ながらそう

47
00:03:27,129 --> 00:03:37,318
機能開発時はスピードいう宣伝雨にコーディングすることができます

48
00:03:31,710 --> 00:03:43,440
昨日開発時にソースコードをきれいに整えることまで意識して帰っていると

49
00:03:37,319 --> 00:03:48,869
開発スピードが遅くなってしまうのでまずは機能を実現することを優先してその後で

50
00:03:43,439 --> 00:03:51,698
ソースコードをきれいにするというふうに段階を分けた方が開発をスムーズに進め

51
00:03:48,870 --> 00:03:52,729
られると思います皆さんもぜひ試してみて

52
00:03:51,699 --> 00:03:57,618
ません

53
00:03:52,729 --> 00:04:02,347
正しいチーム開発をしている場合は自分の書いたソースコードをリモートリポジトリー

54
00:03:57,620 --> 00:04:02,349
にプッシュする前にキレイに整えるようにしましょう

55
00:04:02,979 --> 00:04:12,428
次は処理の共通化を行っていきます処理の共通化タワー

56
00:04:07,419 --> 00:04:15,678
ソースコードのいろいろな場所に書かれている同じような処理を置くぷりだして共通

57
00:04:12,430 --> 00:04:19,899
関数として一元管理することです

58
00:04:15,680 --> 00:04:23,939
例えばこの時間を形式チェック処理ですが

59
00:04:19,899 --> 00:04:29,908
ソース内に3カ所同じチェック処理を変えていますね

60
00:04:23,939 --> 00:04:30,967
これは社員側の日報登録画面のソースですが管理者側のソースにも同様の処理が書かれ

61
00:04:29,910 --> 00:04:35,620
ています

62
00:04:30,968 --> 00:04:41,909
なのでこの処理を共通関数がしてまとめてしまいましょう

63
00:04:35,620 --> 00:04:41,910
共通関数用のファンクションず php に新しい関数を定義して

64
00:04:52,000 --> 00:04:57,429
[音楽]

65
00:04:53,509 --> 00:04:57,428
処理内容をそのままコピーしてきます

66
00:04:59,660 --> 00:05:08,480
引数で与えられた値をチェックするように変更して

67
00:05:04,199 --> 00:05:08,479
チェック結果が ok の場合は true

68
00:05:08,728 --> 00:05:16,489
ng の場合はフォルスを返すようにします

69
00:05:12,389 --> 00:05:16,488
これで共通関数彼は ok です

70
00:05:17,399 --> 00:05:26,529
あとはチェックを行いたい部分で処理を直接書くのではなく

71
00:05:22,319 --> 00:05:42,878
このように先ほど作った関数を呼び出すようにすれば ok です

72
00:05:26,529 --> 00:05:42,878
[音楽]

73
00:05:47,920 --> 00:05:57,550
このようにアプリの動きとしては修正前と全く変わりませんが

74
00:05:52,389 --> 00:06:00,789
ソースコードの内部的にはこのように各処理が簡素化されて見やすくなり

75
00:05:57,550 --> 00:06:06,430
チェック処理も複数カ所に点在することが風

76
00:06:00,790 --> 00:06:07,940
このように関数として次元管理されているのでもし後からチェックの仕様が変わり

77
00:06:06,430 --> 00:06:13,210
正規表現を調整する

78
00:06:07,939 --> 00:06:13,208
この場合も修正はこの一箇所だけで済みますね

79
00:06:14,699 --> 00:06:20,998
あとはこの header 関数で別画面にリダイレクトさせる処理もいろいろな場所

80
00:06:19,680 --> 00:06:25,729
で登場しますが

81
00:06:21,000 --> 00:06:25,730
処理は毎回同じなので関数化してしまいましょう

82
00:06:27,870 --> 00:06:46,749
[音楽]

83
00:06:55,170 --> 00:07:00,599
[音楽]

84
00:06:57,790 --> 00:07:00,600
これでいいですね

85
00:07:01,259 --> 00:07:04,359
[音楽]

86
00:07:09,939 --> 00:07:19,569
各処理の中で別画面に遷移させる時はリダイレクトと一時を履くだけで ok です

87
00:07:15,959 --> 00:07:21,098
ソースコードがより簡素化されて見やすくなりました

88
00:07:19,569 --> 00:07:26,368
[音楽]

89
00:07:21,100 --> 00:07:26,369
次は html レイアウトの共通化作業を行っています

90
00:07:26,620 --> 00:07:34,940
html 文もこの head タグや

91
00:07:30,379 --> 00:07:38,369
ログ部分など全画面で共通のエリアがいくつかあります

92
00:07:34,939 --> 00:07:40,419
これらは別ファイル化して共通化してしまいましょう

93
00:07:38,370 --> 00:07:45,200
まずは head タグ

94
00:07:40,420 --> 00:07:50,230
共通レイアウトを格納するための10プレースフォルダーを作り

95
00:07:45,199 --> 00:07:50,229
その中にヘッドダグ php を新規作成します

96
00:07:50,790 --> 00:07:55,129
ここに head タグ全体を移設します

97
00:07:57,870 --> 00:08:03,600
元の php 側ではこのヘッド tags php をインクルードするように指定

98
00:08:02,250 --> 00:08:08,830
します

99
00:08:03,600 --> 00:08:08,830
[音楽]

100
00:08:13,410 --> 00:08:23,400
こうしておけば前 php に毎回同じ head タグを書かなくても

101
00:08:18,399 --> 00:08:23,399
improve 分を1行書くだけです御感想がされます

102
00:08:24,000 --> 00:08:47,600
なおタイトル部分は画面ごとに異なるため変数化して読み込むようにします

103
00:08:30,439 --> 00:08:50,498
[音楽]

104
00:08:47,600 --> 00:08:50,499
これで ok ですね

105
00:08:51,610 --> 00:08:54,748
[音楽]

106
00:08:58,000 --> 00:09:02,519
同じようにヘッダ部分を共通化しておきましょう

107
00:09:08,009 --> 00:09:11,129
[音楽]

108
00:09:16,730 --> 00:09:19,830
[音楽]

109
00:09:26,830 --> 00:09:31,179
[音楽]

110
00:09:35,539 --> 00:09:48,087
[音楽]

111
00:09:42,870 --> 00:09:49,870
これで各 php の html ビューはその場面独自の部分のみが残り

112
00:09:48,089 --> 00:09:53,109
だいぶ簡素化されましたね

113
00:09:49,870 --> 00:09:58,959
メンテナンスもしやすくなったと思います

114
00:09:53,110 --> 00:10:00,850
関数の時と同じように例えばロゴが蘇芳別のものに差し替えたいとか色々アナ

115
00:09:58,958 --> 00:10:04,389
リティクスなどの追加タグを

116
00:10:00,850 --> 00:10:09,879
head タグ内に組み込みたいといったことがあった場合にも

117
00:10:04,389 --> 00:10:11,767
全画面を一つ一つ修正する必要なくこのテンプレートファイルを1箇所をいじるだけで

118
00:10:09,879 --> 00:10:17,228
済みます

119
00:10:11,769 --> 00:10:17,860
このようにアプリの動作自体は変わらないままライブ的にソースコードをキレイに整え

120
00:10:17,230 --> 00:10:22,980
て

121
00:10:17,860 --> 00:10:28,320
可読性やメンテナンス性を向上させていくのがリファクタリングという作業です

122
00:10:22,980 --> 00:10:32,419
このソースコードに行った作業を他の行動にも同じように適用していけば今回のアプリ

123
00:10:28,320 --> 00:10:32,419
のリファクタリングはひとまず ok です

124
00:10:32,879 --> 00:10:41,568
あとは最終調整として槍の穂している部分がないかどうかチェックしていきます

125
00:10:37,549 --> 00:10:41,568
[音楽]

126
00:10:43,889 --> 00:10:47,139
[音楽]

127
00:10:47,769 --> 00:10:54,150
このアプリにはまだファビコンを設定していなかったので最後にファビコンを設定して

128
00:10:52,389 --> 00:10:58,820
おきましょう

129
00:10:54,149 --> 00:10:58,818
路傍もとに浴び今生成サイトで作成します

130
00:10:59,610 --> 00:11:02,748
[音楽]

131
00:11:07,309 --> 00:11:10,378
[音楽]

132
00:11:10,620 --> 00:11:18,680
阿部今は head タグに組み込む必要があるため先ほど共通化したヘッド tags

133
00:11:15,269 --> 00:11:18,679
php に組み込めます

134
00:11:22,149 --> 00:11:31,838
テンプレート化する前であれば全 php に来る子もなければならないところでした

135
00:11:27,528 --> 00:11:31,837
いきなりリファクタリングの ok が受けられましたね

136
00:11:35,580 --> 00:11:38,929
[音楽]

137
00:11:41,799 --> 00:11:48,638
[音楽]

138
00:11:47,049 --> 00:11:51,898
これで ok です

139
00:11:48,639 --> 00:11:51,898
画面をリロードすると

140
00:11:51,919 --> 00:11:57,978
我孫子んが設定されました

141
00:11:54,419 --> 00:11:57,979
これで今回の作業は完了です

142
00:11:58,499 --> 00:12:08,278
ということで今回はまるさんのリファクタリングを行いました

143
00:12:02,730 --> 00:12:10,948
今回はアプリの動作としては目に見えて変わる部分はほとんどありませんでしたが内部

144
00:12:08,278 --> 00:12:13,109
的なソースコードとしては整理され

145
00:12:10,948 --> 00:12:19,198
メンテナンス性が向上しました

146
00:12:13,110 --> 00:12:21,820
今後のプログラムの品質の上ではとても重要な作業です皆さんもアプリを作る際は忘れ

147
00:12:19,200 --> 00:12:25,419
ずにリファクタリングを実施してください

148
00:12:21,820 --> 00:12:30,550
さてこれで開発フェーズは全て完了です

149
00:12:25,419 --> 00:12:31,329
次回は最終工程である検証フェーズを進めていきましょうというわけで今回は以上に

150
00:12:30,549 --> 00:12:35,499
なります

151
00:12:31,330 --> 00:12:39,669
アプレチャンネルでは実践的なプログラミングスキルを分かりやすく発信しています

152
00:12:35,500 --> 00:12:41,839
アップされている動画をひと通り見ていただくと web エンジニアの幅広いスキル

153
00:12:39,669 --> 00:12:46,638
頑張りますのでぜひチャンネル登録

154
00:12:41,840 --> 00:12:50,629
6ので暗号化をご覧下さいまた僕の運営しているオンラインプログラミング講座では

155
00:12:46,639 --> 00:12:54,558
プログラミングスプールを1ステップずつ順番に学んでいき

156
00:12:50,629 --> 00:12:55,098
全くの出身者からでもうプロレベルに到達することができるカリキュラムになってい

157
00:12:54,559 --> 00:13:00,978
ますので

158
00:12:55,100 --> 00:13:01,830
プログラミングスキルを本気で学んでいきたい方はぜひ概要欄 padi すそれ

159
00:13:00,980 --> 00:13:02,080
じゃあ

160
00:13:01,830 --> 00:13:02,260
ん

161
00:13:02,080 --> 00:13:05,330
ん

162
00:13:02,259 --> 00:13:05,328
[音楽]

